Terminals unused in grammar

   UMIN
   TRY
   ENTER


Grammar

    0 $accept: S $end

    1 S: exec
    2  | CREATE lDecs exec

    3 lDecs: declaracion
    4      | lDecs declaracion

    5 declaracion: tipo BOT decl END
    6            | tipo BOT decl lComp END

    7 lComp: ON condicion DOSPUNTOS instrs END
    8      | lComp ON condicion DOSPUNTOS instrs END

    9 decl: IDENTIFIER COMA decl
   10     | IDENTIFIER

   11 tipo: INT
   12     | BOOL
   13     | CHAR

   14 condicion: ACTIVATION
   15          | DEACTIVATION
   16          | DEFAULT
   17          | exprBool

   18 exec: EXECUTE instrs END

   19 instrs: instr
   20       | instrs instr

   21 instr: ACTIVATE decl PUNTO
   22      | DEACTIVATE decl PUNTO
   23      | STORE expr PUNTO
   24      | COLLECT PUNTO
   25      | COLLECT "as" decl PUNTO
   26      | DROP expr PUNTO
   27      | UP expr PUNTO
   28      | DOWN expr PUNTO
   29      | LEFT expr PUNTO
   30      | RIGHT expr PUNTO
   31      | READ PUNTO
   32      | READ "as" decl PUNTO
   33      | SEND PUNTO
   34      | ADVANCE decl PUNTO
   35      | RECEIVE PUNTO
   36      | IF exprBool DOSPUNTOS instr END
   37      | IF exprBool DOSPUNTOS instr ELSE instr END
   38      | WHILE exprBool DOSPUNTOS instr END

   39 expr: exprArit
   40     | exprBool
   41     | CHARACTER

   42 exprArit: exprArit SUMA exprArit
   43         | exprArit RESTA exprArit
   44         | exprArit MULT exprArit
   45         | exprArit DIV exprArit
   46         | exprArit MOD exprArit
   47         | PARABRE exprArit PARCIERRA
   48         | RESTA exprArit
   49         | number

   50 exprBool: exprRel
   51         | exprLogic

   52 exprRel: exprArit IGUAL exprArit
   53        | exprArit MENOR exprArit
   54        | exprArit MAYOR exprArit
   55        | exprArit MENORIGUAL exprArit
   56        | exprArit MAYORIGUAL exprArit
   57        | PARABRE exprRel PARCIERRA
   58        | TRUE
   59        | FALSE

   60 exprLogic: exprRel CONJUNCION exprRel
   61          | exprRel DISYUNCION exprRel
   62          | NEGACION exprRel


Terminals, with rules where they appear

$end (0) 0
error (256)
IGUAL (258) 52
MENOR (259) 53
MAYOR (260) 54
SUMA (261) 42
RESTA (262) 43 48
MULT (263) 44
DIV (264) 45
MOD (265) 46
UMIN (266)
TRY (267)
ENTER (268)
MENORIGUAL (269) 55
MAYORIGUAL (270) 56
PARABRE (271) 47 57
PARCIERRA (272) 47 57
CONJUNCION (273) 60
DISYUNCION (274) 61
NEGACION (275) 62
COMA (276) 9
PUNTO (277) 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35
DOSPUNTOS (278) 7 8 36 37 38
BOT (279) 5 6
CREATE (280) 2
EXECUTE (281) 18
ACTIVATE (282) 21
DEACTIVATE (283) 22
STORE (284) 23
COLLECT (285) 24 25
DROP (286) 26
ADVANCE (287) 34
ON (288) 7 8
ACTIVATION (289) 14
DEACTIVATION (290) 15
DEFAULT (291) 16
UP (292) 27
DOWN (293) 28
LEFT (294) 29
RIGHT (295) 30
READ (296) 31 32
SEND (297) 33
RECEIVE (298) 35
IF (299) 36 37
ELSE (300) 37
END (301) 5 6 7 8 18 36 37 38
WHILE (302) 38
INT (303) 11
BOOL (304) 12
CHAR (305) 13
CHARACTER (306) 41
number (307) 49
IDENTIFIER (308) 9 10
TRUE (309) 58
FALSE (310) 59
"as" (311) 25 32


Nonterminals, with rules where they appear

$accept (57)
    on left: 0
S (58)
    on left: 1 2, on right: 0
lDecs (59)
    on left: 3 4, on right: 2 4
declaracion (60)
    on left: 5 6, on right: 3 4
lComp (61)
    on left: 7 8, on right: 6 8
decl (62)
    on left: 9 10, on right: 5 6 9 21 22 25 32 34
tipo (63)
    on left: 11 12 13, on right: 5 6
condicion (64)
    on left: 14 15 16 17, on right: 7 8
exec (65)
    on left: 18, on right: 1 2
instrs (66)
    on left: 19 20, on right: 7 8 18 20
instr (67)
    on left: 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38,
    on right: 19 20 36 37 38
expr (68)
    on left: 39 40 41, on right: 23 26 27 28 29 30
exprArit (69)
    on left: 42 43 44 45 46 47 48 49, on right: 39 42 43 44 45 46 47
    48 52 53 54 55 56
exprBool (70)
    on left: 50 51, on right: 17 36 37 38 40
exprRel (71)
    on left: 52 53 54 55 56 57 58 59, on right: 50 57 60 61 62
exprLogic (72)
    on left: 60 61 62, on right: 51


State 0

    0 $accept: . S $end

    CREATE   shift, and go to state 1
    EXECUTE  shift, and go to state 2

    S     go to state 3
    exec  go to state 4


State 1

    2 S: CREATE . lDecs exec

    INT   shift, and go to state 5
    BOOL  shift, and go to state 6
    CHAR  shift, and go to state 7

    lDecs        go to state 8
    declaracion  go to state 9
    tipo         go to state 10


State 2

   18 exec: EXECUTE . instrs END

    ACTIVATE    shift, and go to state 11
    DEACTIVATE  shift, and go to state 12
    STORE       shift, and go to state 13
    COLLECT     shift, and go to state 14
    DROP        shift, and go to state 15
    ADVANCE     shift, and go to state 16
    UP          shift, and go to state 17
    DOWN        shift, and go to state 18
    LEFT        shift, and go to state 19
    RIGHT       shift, and go to state 20
    READ        shift, and go to state 21
    SEND        shift, and go to state 22
    RECEIVE     shift, and go to state 23
    IF          shift, and go to state 24
    WHILE       shift, and go to state 25

    instrs  go to state 26
    instr   go to state 27


State 3

    0 $accept: S . $end

    $end  shift, and go to state 28


State 4

    1 S: exec .

    $default  reduce using rule 1 (S)


State 5

   11 tipo: INT .

    $default  reduce using rule 11 (tipo)


State 6

   12 tipo: BOOL .

    $default  reduce using rule 12 (tipo)


State 7

   13 tipo: CHAR .

    $default  reduce using rule 13 (tipo)


State 8

    2 S: CREATE lDecs . exec
    4 lDecs: lDecs . declaracion

    EXECUTE  shift, and go to state 2
    INT      shift, and go to state 5
    BOOL     shift, and go to state 6
    CHAR     shift, and go to state 7

    declaracion  go to state 29
    tipo         go to state 10
    exec         go to state 30


State 9

    3 lDecs: declaracion .

    $default  reduce using rule 3 (lDecs)


State 10

    5 declaracion: tipo . BOT decl END
    6            | tipo . BOT decl lComp END

    BOT  shift, and go to state 31


State 11

   21 instr: ACTIVATE . decl PUNTO

    IDENTIFIER  shift, and go to state 32

    decl  go to state 33


State 12

   22 instr: DEACTIVATE . decl PUNTO

    IDENTIFIER  shift, and go to state 32

    decl  go to state 34


State 13

   23 instr: STORE . expr PUNTO

    RESTA      shift, and go to state 35
    PARABRE    shift, and go to state 36
    NEGACION   shift, and go to state 37
    CHARACTER  shift, and go to state 38
    number     shift, and go to state 39
    TRUE       shift, and go to state 40
    FALSE      shift, and go to state 41

    expr       go to state 42
    exprArit   go to state 43
    exprBool   go to state 44
    exprRel    go to state 45
    exprLogic  go to state 46


State 14

   24 instr: COLLECT . PUNTO
   25      | COLLECT . "as" decl PUNTO

    PUNTO  shift, and go to state 47
    "as"   shift, and go to state 48


State 15

   26 instr: DROP . expr PUNTO

    RESTA      shift, and go to state 35
    PARABRE    shift, and go to state 36
    NEGACION   shift, and go to state 37
    CHARACTER  shift, and go to state 38
    number     shift, and go to state 39
    TRUE       shift, and go to state 40
    FALSE      shift, and go to state 41

    expr       go to state 49
    exprArit   go to state 43
    exprBool   go to state 44
    exprRel    go to state 45
    exprLogic  go to state 46


State 16

   34 instr: ADVANCE . decl PUNTO

    IDENTIFIER  shift, and go to state 32

    decl  go to state 50


State 17

   27 instr: UP . expr PUNTO

    RESTA      shift, and go to state 35
    PARABRE    shift, and go to state 36
    NEGACION   shift, and go to state 37
    CHARACTER  shift, and go to state 38
    number     shift, and go to state 39
    TRUE       shift, and go to state 40
    FALSE      shift, and go to state 41

    expr       go to state 51
    exprArit   go to state 43
    exprBool   go to state 44
    exprRel    go to state 45
    exprLogic  go to state 46


State 18

   28 instr: DOWN . expr PUNTO

    RESTA      shift, and go to state 35
    PARABRE    shift, and go to state 36
    NEGACION   shift, and go to state 37
    CHARACTER  shift, and go to state 38
    number     shift, and go to state 39
    TRUE       shift, and go to state 40
    FALSE      shift, and go to state 41

    expr       go to state 52
    exprArit   go to state 43
    exprBool   go to state 44
    exprRel    go to state 45
    exprLogic  go to state 46


State 19

   29 instr: LEFT . expr PUNTO

    RESTA      shift, and go to state 35
    PARABRE    shift, and go to state 36
    NEGACION   shift, and go to state 37
    CHARACTER  shift, and go to state 38
    number     shift, and go to state 39
    TRUE       shift, and go to state 40
    FALSE      shift, and go to state 41

    expr       go to state 53
    exprArit   go to state 43
    exprBool   go to state 44
    exprRel    go to state 45
    exprLogic  go to state 46


State 20

   30 instr: RIGHT . expr PUNTO

    RESTA      shift, and go to state 35
    PARABRE    shift, and go to state 36
    NEGACION   shift, and go to state 37
    CHARACTER  shift, and go to state 38
    number     shift, and go to state 39
    TRUE       shift, and go to state 40
    FALSE      shift, and go to state 41

    expr       go to state 54
    exprArit   go to state 43
    exprBool   go to state 44
    exprRel    go to state 45
    exprLogic  go to state 46


State 21

   31 instr: READ . PUNTO
   32      | READ . "as" decl PUNTO

    PUNTO  shift, and go to state 55
    "as"   shift, and go to state 56


State 22

   33 instr: SEND . PUNTO

    PUNTO  shift, and go to state 57


State 23

   35 instr: RECEIVE . PUNTO

    PUNTO  shift, and go to state 58


State 24

   36 instr: IF . exprBool DOSPUNTOS instr END
   37      | IF . exprBool DOSPUNTOS instr ELSE instr END

    RESTA     shift, and go to state 35
    PARABRE   shift, and go to state 36
    NEGACION  shift, and go to state 37
    number    shift, and go to state 39
    TRUE      shift, and go to state 40
    FALSE     shift, and go to state 41

    exprArit   go to state 59
    exprBool   go to state 60
    exprRel    go to state 45
    exprLogic  go to state 46


State 25

   38 instr: WHILE . exprBool DOSPUNTOS instr END

    RESTA     shift, and go to state 35
    PARABRE   shift, and go to state 36
    NEGACION  shift, and go to state 37
    number    shift, and go to state 39
    TRUE      shift, and go to state 40
    FALSE     shift, and go to state 41

    exprArit   go to state 59
    exprBool   go to state 61
    exprRel    go to state 45
    exprLogic  go to state 46


State 26

   18 exec: EXECUTE instrs . END
   20 instrs: instrs . instr

    ACTIVATE    shift, and go to state 11
    DEACTIVATE  shift, and go to state 12
    STORE       shift, and go to state 13
    COLLECT     shift, and go to state 14
    DROP        shift, and go to state 15
    ADVANCE     shift, and go to state 16
    UP          shift, and go to state 17
    DOWN        shift, and go to state 18
    LEFT        shift, and go to state 19
    RIGHT       shift, and go to state 20
    READ        shift, and go to state 21
    SEND        shift, and go to state 22
    RECEIVE     shift, and go to state 23
    IF          shift, and go to state 24
    END         shift, and go to state 62
    WHILE       shift, and go to state 25

    instr  go to state 63


State 27

   19 instrs: instr .

    $default  reduce using rule 19 (instrs)


State 28

    0 $accept: S $end .

    $default  accept


State 29

    4 lDecs: lDecs declaracion .

    $default  reduce using rule 4 (lDecs)


State 30

    2 S: CREATE lDecs exec .

    $default  reduce using rule 2 (S)


State 31

    5 declaracion: tipo BOT . decl END
    6            | tipo BOT . decl lComp END

    IDENTIFIER  shift, and go to state 32

    decl  go to state 64


State 32

    9 decl: IDENTIFIER . COMA decl
   10     | IDENTIFIER .

    COMA  shift, and go to state 65

    $default  reduce using rule 10 (decl)


State 33

   21 instr: ACTIVATE decl . PUNTO

    PUNTO  shift, and go to state 66


State 34

   22 instr: DEACTIVATE decl . PUNTO

    PUNTO  shift, and go to state 67


State 35

   48 exprArit: RESTA . exprArit

    RESTA    shift, and go to state 35
    PARABRE  shift, and go to state 68
    number   shift, and go to state 39

    exprArit  go to state 69


State 36

   47 exprArit: PARABRE . exprArit PARCIERRA
   57 exprRel: PARABRE . exprRel PARCIERRA

    RESTA    shift, and go to state 35
    PARABRE  shift, and go to state 36
    number   shift, and go to state 39
    TRUE     shift, and go to state 40
    FALSE    shift, and go to state 41

    exprArit  go to state 70
    exprRel   go to state 71


State 37

   62 exprLogic: NEGACION . exprRel

    RESTA    shift, and go to state 35
    PARABRE  shift, and go to state 36
    number   shift, and go to state 39
    TRUE     shift, and go to state 40
    FALSE    shift, and go to state 41

    exprArit  go to state 59
    exprRel   go to state 72


State 38

   41 expr: CHARACTER .

    $default  reduce using rule 41 (expr)


State 39

   49 exprArit: number .

    $default  reduce using rule 49 (exprArit)


State 40

   58 exprRel: TRUE .

    $default  reduce using rule 58 (exprRel)


State 41

   59 exprRel: FALSE .

    $default  reduce using rule 59 (exprRel)


State 42

   23 instr: STORE expr . PUNTO

    PUNTO  shift, and go to state 73


State 43

   39 expr: exprArit .
   42 exprArit: exprArit . SUMA exprArit
   43         | exprArit . RESTA exprArit
   44         | exprArit . MULT exprArit
   45         | exprArit . DIV exprArit
   46         | exprArit . MOD exprArit
   52 exprRel: exprArit . IGUAL exprArit
   53        | exprArit . MENOR exprArit
   54        | exprArit . MAYOR exprArit
   55        | exprArit . MENORIGUAL exprArit
   56        | exprArit . MAYORIGUAL exprArit

    IGUAL       shift, and go to state 74
    MENOR       shift, and go to state 75
    MAYOR       shift, and go to state 76
    SUMA        shift, and go to state 77
    RESTA       shift, and go to state 78
    MULT        shift, and go to state 79
    DIV         shift, and go to state 80
    MOD         shift, and go to state 81
    MENORIGUAL  shift, and go to state 82
    MAYORIGUAL  shift, and go to state 83

    $default  reduce using rule 39 (expr)


State 44

   40 expr: exprBool .

    $default  reduce using rule 40 (expr)


State 45

   50 exprBool: exprRel .
   60 exprLogic: exprRel . CONJUNCION exprRel
   61          | exprRel . DISYUNCION exprRel

    CONJUNCION  shift, and go to state 84
    DISYUNCION  shift, and go to state 85

    $default  reduce using rule 50 (exprBool)


State 46

   51 exprBool: exprLogic .

    $default  reduce using rule 51 (exprBool)


State 47

   24 instr: COLLECT PUNTO .

    $default  reduce using rule 24 (instr)


State 48

   25 instr: COLLECT "as" . decl PUNTO

    IDENTIFIER  shift, and go to state 32

    decl  go to state 86


State 49

   26 instr: DROP expr . PUNTO

    PUNTO  shift, and go to state 87


State 50

   34 instr: ADVANCE decl . PUNTO

    PUNTO  shift, and go to state 88


State 51

   27 instr: UP expr . PUNTO

    PUNTO  shift, and go to state 89


State 52

   28 instr: DOWN expr . PUNTO

    PUNTO  shift, and go to state 90


State 53

   29 instr: LEFT expr . PUNTO

    PUNTO  shift, and go to state 91


State 54

   30 instr: RIGHT expr . PUNTO

    PUNTO  shift, and go to state 92


State 55

   31 instr: READ PUNTO .

    $default  reduce using rule 31 (instr)


State 56

   32 instr: READ "as" . decl PUNTO

    IDENTIFIER  shift, and go to state 32

    decl  go to state 93


State 57

   33 instr: SEND PUNTO .

    $default  reduce using rule 33 (instr)


State 58

   35 instr: RECEIVE PUNTO .

    $default  reduce using rule 35 (instr)


State 59

   42 exprArit: exprArit . SUMA exprArit
   43         | exprArit . RESTA exprArit
   44         | exprArit . MULT exprArit
   45         | exprArit . DIV exprArit
   46         | exprArit . MOD exprArit
   52 exprRel: exprArit . IGUAL exprArit
   53        | exprArit . MENOR exprArit
   54        | exprArit . MAYOR exprArit
   55        | exprArit . MENORIGUAL exprArit
   56        | exprArit . MAYORIGUAL exprArit

    IGUAL       shift, and go to state 74
    MENOR       shift, and go to state 75
    MAYOR       shift, and go to state 76
    SUMA        shift, and go to state 77
    RESTA       shift, and go to state 78
    MULT        shift, and go to state 79
    DIV         shift, and go to state 80
    MOD         shift, and go to state 81
    MENORIGUAL  shift, and go to state 82
    MAYORIGUAL  shift, and go to state 83


State 60

   36 instr: IF exprBool . DOSPUNTOS instr END
   37      | IF exprBool . DOSPUNTOS instr ELSE instr END

    DOSPUNTOS  shift, and go to state 94


State 61

   38 instr: WHILE exprBool . DOSPUNTOS instr END

    DOSPUNTOS  shift, and go to state 95


State 62

   18 exec: EXECUTE instrs END .

    $default  reduce using rule 18 (exec)


State 63

   20 instrs: instrs instr .

    $default  reduce using rule 20 (instrs)


State 64

    5 declaracion: tipo BOT decl . END
    6            | tipo BOT decl . lComp END

    ON   shift, and go to state 96
    END  shift, and go to state 97

    lComp  go to state 98


State 65

    9 decl: IDENTIFIER COMA . decl

    IDENTIFIER  shift, and go to state 32

    decl  go to state 99


State 66

   21 instr: ACTIVATE decl PUNTO .

    $default  reduce using rule 21 (instr)


State 67

   22 instr: DEACTIVATE decl PUNTO .

    $default  reduce using rule 22 (instr)


State 68

   47 exprArit: PARABRE . exprArit PARCIERRA

    RESTA    shift, and go to state 35
    PARABRE  shift, and go to state 68
    number   shift, and go to state 39

    exprArit  go to state 100


State 69

   42 exprArit: exprArit . SUMA exprArit
   43         | exprArit . RESTA exprArit
   44         | exprArit . MULT exprArit
   45         | exprArit . DIV exprArit
   46         | exprArit . MOD exprArit
   48         | RESTA exprArit .

    MULT  shift, and go to state 79
    DIV   shift, and go to state 80
    MOD   shift, and go to state 81

    $default  reduce using rule 48 (exprArit)


State 70

   42 exprArit: exprArit . SUMA exprArit
   43         | exprArit . RESTA exprArit
   44         | exprArit . MULT exprArit
   45         | exprArit . DIV exprArit
   46         | exprArit . MOD exprArit
   47         | PARABRE exprArit . PARCIERRA
   52 exprRel: exprArit . IGUAL exprArit
   53        | exprArit . MENOR exprArit
   54        | exprArit . MAYOR exprArit
   55        | exprArit . MENORIGUAL exprArit
   56        | exprArit . MAYORIGUAL exprArit

    IGUAL       shift, and go to state 74
    MENOR       shift, and go to state 75
    MAYOR       shift, and go to state 76
    SUMA        shift, and go to state 77
    RESTA       shift, and go to state 78
    MULT        shift, and go to state 79
    DIV         shift, and go to state 80
    MOD         shift, and go to state 81
    MENORIGUAL  shift, and go to state 82
    MAYORIGUAL  shift, and go to state 83
    PARCIERRA   shift, and go to state 101


State 71

   57 exprRel: PARABRE exprRel . PARCIERRA

    PARCIERRA  shift, and go to state 102


State 72

   62 exprLogic: NEGACION exprRel .

    $default  reduce using rule 62 (exprLogic)


State 73

   23 instr: STORE expr PUNTO .

    $default  reduce using rule 23 (instr)


State 74

   52 exprRel: exprArit IGUAL . exprArit

    RESTA    shift, and go to state 35
    PARABRE  shift, and go to state 68
    number   shift, and go to state 39

    exprArit  go to state 103


State 75

   53 exprRel: exprArit MENOR . exprArit

    RESTA    shift, and go to state 35
    PARABRE  shift, and go to state 68
    number   shift, and go to state 39

    exprArit  go to state 104


State 76

   54 exprRel: exprArit MAYOR . exprArit

    RESTA    shift, and go to state 35
    PARABRE  shift, and go to state 68
    number   shift, and go to state 39

    exprArit  go to state 105


State 77

   42 exprArit: exprArit SUMA . exprArit

    RESTA    shift, and go to state 35
    PARABRE  shift, and go to state 68
    number   shift, and go to state 39

    exprArit  go to state 106


State 78

   43 exprArit: exprArit RESTA . exprArit

    RESTA    shift, and go to state 35
    PARABRE  shift, and go to state 68
    number   shift, and go to state 39

    exprArit  go to state 107


State 79

   44 exprArit: exprArit MULT . exprArit

    RESTA    shift, and go to state 35
    PARABRE  shift, and go to state 68
    number   shift, and go to state 39

    exprArit  go to state 108


State 80

   45 exprArit: exprArit DIV . exprArit

    RESTA    shift, and go to state 35
    PARABRE  shift, and go to state 68
    number   shift, and go to state 39

    exprArit  go to state 109


State 81

   46 exprArit: exprArit MOD . exprArit

    RESTA    shift, and go to state 35
    PARABRE  shift, and go to state 68
    number   shift, and go to state 39

    exprArit  go to state 110


State 82

   55 exprRel: exprArit MENORIGUAL . exprArit

    RESTA    shift, and go to state 35
    PARABRE  shift, and go to state 68
    number   shift, and go to state 39

    exprArit  go to state 111


State 83

   56 exprRel: exprArit MAYORIGUAL . exprArit

    RESTA    shift, and go to state 35
    PARABRE  shift, and go to state 68
    number   shift, and go to state 39

    exprArit  go to state 112


State 84

   60 exprLogic: exprRel CONJUNCION . exprRel

    RESTA    shift, and go to state 35
    PARABRE  shift, and go to state 36
    number   shift, and go to state 39
    TRUE     shift, and go to state 40
    FALSE    shift, and go to state 41

    exprArit  go to state 59
    exprRel   go to state 113


State 85

   61 exprLogic: exprRel DISYUNCION . exprRel

    RESTA    shift, and go to state 35
    PARABRE  shift, and go to state 36
    number   shift, and go to state 39
    TRUE     shift, and go to state 40
    FALSE    shift, and go to state 41

    exprArit  go to state 59
    exprRel   go to state 114


State 86

   25 instr: COLLECT "as" decl . PUNTO

    PUNTO  shift, and go to state 115


State 87

   26 instr: DROP expr PUNTO .

    $default  reduce using rule 26 (instr)


State 88

   34 instr: ADVANCE decl PUNTO .

    $default  reduce using rule 34 (instr)


State 89

   27 instr: UP expr PUNTO .

    $default  reduce using rule 27 (instr)


State 90

   28 instr: DOWN expr PUNTO .

    $default  reduce using rule 28 (instr)


State 91

   29 instr: LEFT expr PUNTO .

    $default  reduce using rule 29 (instr)


State 92

   30 instr: RIGHT expr PUNTO .

    $default  reduce using rule 30 (instr)


State 93

   32 instr: READ "as" decl . PUNTO

    PUNTO  shift, and go to state 116


State 94

   36 instr: IF exprBool DOSPUNTOS . instr END
   37      | IF exprBool DOSPUNTOS . instr ELSE instr END

    ACTIVATE    shift, and go to state 11
    DEACTIVATE  shift, and go to state 12
    STORE       shift, and go to state 13
    COLLECT     shift, and go to state 14
    DROP        shift, and go to state 15
    ADVANCE     shift, and go to state 16
    UP          shift, and go to state 17
    DOWN        shift, and go to state 18
    LEFT        shift, and go to state 19
    RIGHT       shift, and go to state 20
    READ        shift, and go to state 21
    SEND        shift, and go to state 22
    RECEIVE     shift, and go to state 23
    IF          shift, and go to state 24
    WHILE       shift, and go to state 25

    instr  go to state 117


State 95

   38 instr: WHILE exprBool DOSPUNTOS . instr END

    ACTIVATE    shift, and go to state 11
    DEACTIVATE  shift, and go to state 12
    STORE       shift, and go to state 13
    COLLECT     shift, and go to state 14
    DROP        shift, and go to state 15
    ADVANCE     shift, and go to state 16
    UP          shift, and go to state 17
    DOWN        shift, and go to state 18
    LEFT        shift, and go to state 19
    RIGHT       shift, and go to state 20
    READ        shift, and go to state 21
    SEND        shift, and go to state 22
    RECEIVE     shift, and go to state 23
    IF          shift, and go to state 24
    WHILE       shift, and go to state 25

    instr  go to state 118


State 96

    7 lComp: ON . condicion DOSPUNTOS instrs END

    RESTA         shift, and go to state 35
    PARABRE       shift, and go to state 36
    NEGACION      shift, and go to state 37
    ACTIVATION    shift, and go to state 119
    DEACTIVATION  shift, and go to state 120
    DEFAULT       shift, and go to state 121
    number        shift, and go to state 39
    TRUE          shift, and go to state 40
    FALSE         shift, and go to state 41

    condicion  go to state 122
    exprArit   go to state 59
    exprBool   go to state 123
    exprRel    go to state 45
    exprLogic  go to state 46


State 97

    5 declaracion: tipo BOT decl END .

    $default  reduce using rule 5 (declaracion)


State 98

    6 declaracion: tipo BOT decl lComp . END
    8 lComp: lComp . ON condicion DOSPUNTOS instrs END

    ON   shift, and go to state 124
    END  shift, and go to state 125


State 99

    9 decl: IDENTIFIER COMA decl .

    $default  reduce using rule 9 (decl)


State 100

   42 exprArit: exprArit . SUMA exprArit
   43         | exprArit . RESTA exprArit
   44         | exprArit . MULT exprArit
   45         | exprArit . DIV exprArit
   46         | exprArit . MOD exprArit
   47         | PARABRE exprArit . PARCIERRA

    SUMA       shift, and go to state 77
    RESTA      shift, and go to state 78
    MULT       shift, and go to state 79
    DIV        shift, and go to state 80
    MOD        shift, and go to state 81
    PARCIERRA  shift, and go to state 101


State 101

   47 exprArit: PARABRE exprArit PARCIERRA .

    $default  reduce using rule 47 (exprArit)


State 102

   57 exprRel: PARABRE exprRel PARCIERRA .

    $default  reduce using rule 57 (exprRel)


State 103

   42 exprArit: exprArit . SUMA exprArit
   43         | exprArit . RESTA exprArit
   44         | exprArit . MULT exprArit
   45         | exprArit . DIV exprArit
   46         | exprArit . MOD exprArit
   52 exprRel: exprArit IGUAL exprArit .

    SUMA   shift, and go to state 77
    RESTA  shift, and go to state 78
    MULT   shift, and go to state 79
    DIV    shift, and go to state 80
    MOD    shift, and go to state 81

    $default  reduce using rule 52 (exprRel)


State 104

   42 exprArit: exprArit . SUMA exprArit
   43         | exprArit . RESTA exprArit
   44         | exprArit . MULT exprArit
   45         | exprArit . DIV exprArit
   46         | exprArit . MOD exprArit
   53 exprRel: exprArit MENOR exprArit .

    SUMA   shift, and go to state 77
    RESTA  shift, and go to state 78
    MULT   shift, and go to state 79
    DIV    shift, and go to state 80
    MOD    shift, and go to state 81

    $default  reduce using rule 53 (exprRel)


State 105

   42 exprArit: exprArit . SUMA exprArit
   43         | exprArit . RESTA exprArit
   44         | exprArit . MULT exprArit
   45         | exprArit . DIV exprArit
   46         | exprArit . MOD exprArit
   54 exprRel: exprArit MAYOR exprArit .

    SUMA   shift, and go to state 77
    RESTA  shift, and go to state 78
    MULT   shift, and go to state 79
    DIV    shift, and go to state 80
    MOD    shift, and go to state 81

    $default  reduce using rule 54 (exprRel)


State 106

   42 exprArit: exprArit . SUMA exprArit
   42         | exprArit SUMA exprArit .
   43         | exprArit . RESTA exprArit
   44         | exprArit . MULT exprArit
   45         | exprArit . DIV exprArit
   46         | exprArit . MOD exprArit

    MULT  shift, and go to state 79
    DIV   shift, and go to state 80
    MOD   shift, and go to state 81

    $default  reduce using rule 42 (exprArit)


State 107

   42 exprArit: exprArit . SUMA exprArit
   43         | exprArit . RESTA exprArit
   43         | exprArit RESTA exprArit .
   44         | exprArit . MULT exprArit
   45         | exprArit . DIV exprArit
   46         | exprArit . MOD exprArit

    MULT  shift, and go to state 79
    DIV   shift, and go to state 80
    MOD   shift, and go to state 81

    $default  reduce using rule 43 (exprArit)


State 108

   42 exprArit: exprArit . SUMA exprArit
   43         | exprArit . RESTA exprArit
   44         | exprArit . MULT exprArit
   44         | exprArit MULT exprArit .
   45         | exprArit . DIV exprArit
   46         | exprArit . MOD exprArit

    $default  reduce using rule 44 (exprArit)


State 109

   42 exprArit: exprArit . SUMA exprArit
   43         | exprArit . RESTA exprArit
   44         | exprArit . MULT exprArit
   45         | exprArit . DIV exprArit
   45         | exprArit DIV exprArit .
   46         | exprArit . MOD exprArit

    $default  reduce using rule 45 (exprArit)


State 110

   42 exprArit: exprArit . SUMA exprArit
   43         | exprArit . RESTA exprArit
   44         | exprArit . MULT exprArit
   45         | exprArit . DIV exprArit
   46         | exprArit . MOD exprArit
   46         | exprArit MOD exprArit .

    $default  reduce using rule 46 (exprArit)


State 111

   42 exprArit: exprArit . SUMA exprArit
   43         | exprArit . RESTA exprArit
   44         | exprArit . MULT exprArit
   45         | exprArit . DIV exprArit
   46         | exprArit . MOD exprArit
   55 exprRel: exprArit MENORIGUAL exprArit .

    SUMA   shift, and go to state 77
    RESTA  shift, and go to state 78
    MULT   shift, and go to state 79
    DIV    shift, and go to state 80
    MOD    shift, and go to state 81

    $default  reduce using rule 55 (exprRel)


State 112

   42 exprArit: exprArit . SUMA exprArit
   43         | exprArit . RESTA exprArit
   44         | exprArit . MULT exprArit
   45         | exprArit . DIV exprArit
   46         | exprArit . MOD exprArit
   56 exprRel: exprArit MAYORIGUAL exprArit .

    SUMA   shift, and go to state 77
    RESTA  shift, and go to state 78
    MULT   shift, and go to state 79
    DIV    shift, and go to state 80
    MOD    shift, and go to state 81

    $default  reduce using rule 56 (exprRel)


State 113

   60 exprLogic: exprRel CONJUNCION exprRel .

    $default  reduce using rule 60 (exprLogic)


State 114

   61 exprLogic: exprRel DISYUNCION exprRel .

    $default  reduce using rule 61 (exprLogic)


State 115

   25 instr: COLLECT "as" decl PUNTO .

    $default  reduce using rule 25 (instr)


State 116

   32 instr: READ "as" decl PUNTO .

    $default  reduce using rule 32 (instr)


State 117

   36 instr: IF exprBool DOSPUNTOS instr . END
   37      | IF exprBool DOSPUNTOS instr . ELSE instr END

    ELSE  shift, and go to state 126
    END   shift, and go to state 127


State 118

   38 instr: WHILE exprBool DOSPUNTOS instr . END

    END  shift, and go to state 128


State 119

   14 condicion: ACTIVATION .

    $default  reduce using rule 14 (condicion)


State 120

   15 condicion: DEACTIVATION .

    $default  reduce using rule 15 (condicion)


State 121

   16 condicion: DEFAULT .

    $default  reduce using rule 16 (condicion)


State 122

    7 lComp: ON condicion . DOSPUNTOS instrs END

    DOSPUNTOS  shift, and go to state 129


State 123

   17 condicion: exprBool .

    $default  reduce using rule 17 (condicion)


State 124

    8 lComp: lComp ON . condicion DOSPUNTOS instrs END

    RESTA         shift, and go to state 35
    PARABRE       shift, and go to state 36
    NEGACION      shift, and go to state 37
    ACTIVATION    shift, and go to state 119
    DEACTIVATION  shift, and go to state 120
    DEFAULT       shift, and go to state 121
    number        shift, and go to state 39
    TRUE          shift, and go to state 40
    FALSE         shift, and go to state 41

    condicion  go to state 130
    exprArit   go to state 59
    exprBool   go to state 123
    exprRel    go to state 45
    exprLogic  go to state 46


State 125

    6 declaracion: tipo BOT decl lComp END .

    $default  reduce using rule 6 (declaracion)


State 126

   37 instr: IF exprBool DOSPUNTOS instr ELSE . instr END

    ACTIVATE    shift, and go to state 11
    DEACTIVATE  shift, and go to state 12
    STORE       shift, and go to state 13
    COLLECT     shift, and go to state 14
    DROP        shift, and go to state 15
    ADVANCE     shift, and go to state 16
    UP          shift, and go to state 17
    DOWN        shift, and go to state 18
    LEFT        shift, and go to state 19
    RIGHT       shift, and go to state 20
    READ        shift, and go to state 21
    SEND        shift, and go to state 22
    RECEIVE     shift, and go to state 23
    IF          shift, and go to state 24
    WHILE       shift, and go to state 25

    instr  go to state 131


State 127

   36 instr: IF exprBool DOSPUNTOS instr END .

    $default  reduce using rule 36 (instr)


State 128

   38 instr: WHILE exprBool DOSPUNTOS instr END .

    $default  reduce using rule 38 (instr)


State 129

    7 lComp: ON condicion DOSPUNTOS . instrs END

    ACTIVATE    shift, and go to state 11
    DEACTIVATE  shift, and go to state 12
    STORE       shift, and go to state 13
    COLLECT     shift, and go to state 14
    DROP        shift, and go to state 15
    ADVANCE     shift, and go to state 16
    UP          shift, and go to state 17
    DOWN        shift, and go to state 18
    LEFT        shift, and go to state 19
    RIGHT       shift, and go to state 20
    READ        shift, and go to state 21
    SEND        shift, and go to state 22
    RECEIVE     shift, and go to state 23
    IF          shift, and go to state 24
    WHILE       shift, and go to state 25

    instrs  go to state 132
    instr   go to state 27


State 130

    8 lComp: lComp ON condicion . DOSPUNTOS instrs END

    DOSPUNTOS  shift, and go to state 133


State 131

   37 instr: IF exprBool DOSPUNTOS instr ELSE instr . END

    END  shift, and go to state 134


State 132

    7 lComp: ON condicion DOSPUNTOS instrs . END
   20 instrs: instrs . instr

    ACTIVATE    shift, and go to state 11
    DEACTIVATE  shift, and go to state 12
    STORE       shift, and go to state 13
    COLLECT     shift, and go to state 14
    DROP        shift, and go to state 15
    ADVANCE     shift, and go to state 16
    UP          shift, and go to state 17
    DOWN        shift, and go to state 18
    LEFT        shift, and go to state 19
    RIGHT       shift, and go to state 20
    READ        shift, and go to state 21
    SEND        shift, and go to state 22
    RECEIVE     shift, and go to state 23
    IF          shift, and go to state 24
    END         shift, and go to state 135
    WHILE       shift, and go to state 25

    instr  go to state 63


State 133

    8 lComp: lComp ON condicion DOSPUNTOS . instrs END

    ACTIVATE    shift, and go to state 11
    DEACTIVATE  shift, and go to state 12
    STORE       shift, and go to state 13
    COLLECT     shift, and go to state 14
    DROP        shift, and go to state 15
    ADVANCE     shift, and go to state 16
    UP          shift, and go to state 17
    DOWN        shift, and go to state 18
    LEFT        shift, and go to state 19
    RIGHT       shift, and go to state 20
    READ        shift, and go to state 21
    SEND        shift, and go to state 22
    RECEIVE     shift, and go to state 23
    IF          shift, and go to state 24
    WHILE       shift, and go to state 25

    instrs  go to state 136
    instr   go to state 27


State 134

   37 instr: IF exprBool DOSPUNTOS instr ELSE instr END .

    $default  reduce using rule 37 (instr)


State 135

    7 lComp: ON condicion DOSPUNTOS instrs END .

    $default  reduce using rule 7 (lComp)


State 136

    8 lComp: lComp ON condicion DOSPUNTOS instrs . END
   20 instrs: instrs . instr

    ACTIVATE    shift, and go to state 11
    DEACTIVATE  shift, and go to state 12
    STORE       shift, and go to state 13
    COLLECT     shift, and go to state 14
    DROP        shift, and go to state 15
    ADVANCE     shift, and go to state 16
    UP          shift, and go to state 17
    DOWN        shift, and go to state 18
    LEFT        shift, and go to state 19
    RIGHT       shift, and go to state 20
    READ        shift, and go to state 21
    SEND        shift, and go to state 22
    RECEIVE     shift, and go to state 23
    IF          shift, and go to state 24
    END         shift, and go to state 137
    WHILE       shift, and go to state 25

    instr  go to state 63


State 137

    8 lComp: lComp ON condicion DOSPUNTOS instrs END .

    $default  reduce using rule 8 (lComp)
